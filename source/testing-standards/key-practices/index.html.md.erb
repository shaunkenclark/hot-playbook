---
title: Key Practices
weight: 3
---

# <%= current_page.data.title %>

### Key practices:

#### Story Refinement
* BA presents story to QA and Dev.
* 3 Amigos meeting
  * QA Input -  list of all test scenarios for story
  * Discussion with BA and Dev as to how the story will be being tested
  * QA output - A common understanding of the intent of the story, how it is being built and tested.
  * QA create JIRA tasks for tests at unit, integration, service, UI, e2e.
* Definition of Ready accomplished

### Story Development (In-Sprint)

#### Functional Testing:

1. All new code and re-factored (legacy) code should be unit tested. Scope of tests will include valid, invalid & edge cases.
2. Automated integration tests should validate integration of external dependencies and utilise mocks where appropriate
3. CCT and other tests written by developers are peer-reviewed by another developer and QA (aligned with JIRA tasks)
4. API tests are written by a developer and reviewed by QA. APi tests verify communication between actual components are working.
5. Automated UI Testing is executed when a feature is ready and unit/integration tested. Written/executed by QA.
6. Manual testing should cover none-automatable tests

#### Non-Functional Testing:

1. Security Testing  - Static and Dynamic scans performed nightly. Formal pen test prior to prod release. (Work with Security / Pen test team for e2e process)
2. We will go with current NFR acceptance criteria defined. Teams can build faster systems though
3. Performance team will continue as is, but provide support for teams to shift left and have visibility of what performance tests have already been executed (locally earlier)

#### CI-CD pipeline:

1. Ensure all tests are run and visible in pipeline. (<link to pipeline standards, link to test tools)
2. QA to review overnight pipeline health daily prior to team standup.

### Production Support:

* QA part of triage meeting to replicate prod defect in lower environment
* Establish root cause and corrective action (i.e. add a test post fix).

<div class="table-wrap">
   <table class="relative-table wrapped confluenceTable stickyTableHeaders" style="width: 96.9423%; padding: 0px;" resolved="">
      <thead class="tableFloatingHeaderOriginal">
         <tr>
            <th class="confluenceTh">Area</th>
            <th class="confluenceTh">Quality Standard</th>
            <th colspan="1" class="confluenceTh">Process Guidelines</th>
            <th colspan="1" class="confluenceTh">Notes</th>
         </tr>
      </thead>
      <thead class="tableFloatingHeader" style="display: none;">
         <tr>
            <th class="confluenceTh">Area</th>
            <th class="confluenceTh">Quality Standard</th>
            <th colspan="1" class="confluenceTh">Process Guidelines</th>
            <th colspan="1" class="confluenceTh">Notes</th>
         </tr>
      </thead>
      <colgroup>
         <col style="width: 21.8808%;">
         <col style="width: 33.9411%;">
         <col style="width: 22.4551%;">
         <col style="width: 21.5937%;">
      </colgroup>
      <tbody>
         <tr>
            <td class="highlight-blue confluenceTd" style="text-align: center;" colspan="4" data-highlight-colour="blue"><strong>Testing</strong></td>
         </tr>
         <tr>
            <td class="confluenceTd">
               <p><span style="color: rgb(0,0,255);"><strong><a href="/confluence/display/RQA/Unit+and+Mutation+testing"><span style="color: rgb(0,0,255);">Unit</span></a></strong></span></p>
               <p>(Covers method, class, and controllers only - functional and non-functional)</p>
            </td>
            <td class="confluenceTd">
               <ol>
                  <li><span style="color: rgb(0,0,0);text-decoration: none;">All new code and re-factored (legacy) code should be unit tested. </span></li>
                  <li><span style="color: rgb(0,0,0);text-decoration: none;">Every test includes an assert<br></span></li>
                  <li><span style="color: rgb(0,0,0);text-decoration: none;">Scope of tests will include valid, invalid &amp; edge cases derived during 3 Amigo (or similar meeting)</span></li>
                  <li><span style="color: rgb(0,0,0);">JIRA tasks related to unit tests</span></li>
                  <li><span style="color: rgb(0,0,0);">Coverage criteria is &gt; 80%</span></li>
                  <li>Sonar-cloud code quality criteria met (i.e. Duplicated Lines &lt; 3%)</li>
               </ol>
            </td>
            <td colspan="1" class="confluenceTd">
               <ol>
                  <li>Developers to write unit tests</li>
                  <li>QA to review coverage, and sign-off coverage as part of PR review acceptance</li>
                  <li>Team need to review Sonar exclusions for coverage and duplication</li>
               </ol>
            </td>
            <td colspan="1" class="confluenceTd">
               <p>Ensure inserts are meaningful / comprehensive where applicable</p>
               <p>i.e. Assert is NOT NULL - should not be the only check for business logic</p>
            </td>
         </tr>
         <tr>
            <td colspan="1" class="confluenceTd"><span style="color: rgb(0,0,255);"><strong><a href="/confluence/display/RQA/Unit+and+Mutation+testing"><span style="color: rgb(0,0,255);">Mutation testing</span></a> (Optional)</strong></span></td>
            <td colspan="1" class="confluenceTd">
               <div class="content-wrapper">
                  <p>Coverage criteria is &gt; 70%</p>
               </div>
            </td>
            <td colspan="1" class="confluenceTd">
               <p>Developer to run Gradle/Yarn task</p>
            </td>
            <td colspan="1" class="confluenceTd"><br></td>
         </tr>
         <tr>
            <td class="confluenceTd">
               <p><span style="color: rgb(0,0,255);"><strong>Integration</strong></span></p>
               <p><span style="color: rgb(0,0,255);"><span style="color: rgb(0,0,0);">(Covers integration testing using mocks / doubles, and HTTP client or REST Assured)</span></span></p>
            </td>
            <td class="confluenceTd">
               <ol>
                  <li>All integration with external systems tested</li>
                  <li>Tests are not combined with unit (and reported separately in Jenkins as Sonar cloud with latest version combines all unit/component/integration tests)</li>
                  <li>Integration test report should be published to Jenkins( this should be different from check style report)</li>
                  <li>If component integration tests exist, they need to be clearly separated out and reported</li>
                  <li><span style="color: rgb(0,0,0);text-decoration: none;">JIRA tasks created for integration tests</span></li>
               </ol>
            </td>
            <td colspan="1" class="confluenceTd">
               <ol>
                  <li>Developers to write integration tests and mock-out services as applicable</li>
                  <li>QA to review scenario coverage</li>
               </ol>
            </td>
            <td colspan="1" class="confluenceTd">Martin Fowler: ‘<span style="color: rgb(29,28,29);">The point of integration testing, as the name suggests, is to test&nbsp;</span><strong>whether many separately developed modules work together as expected</strong><span style="color: rgb(29,28,29);">. It was performed by activating many modules and running higher level tests against all of them to ensure they operated together. These modules could parts of a single executable, or separate’</span></td>
         </tr>
         <tr>
            <td colspan="1" class="confluenceTd"><strong><a href="https://docs.pact.io/best_practices/" class="external-link" rel="nofollow"><span style="color: rgb(0,0,255);">Consumer Driven Contract testing (PACT)</span></a></strong></td>
            <td colspan="1" class="confluenceTd">
               <ol>
                  <li>All External service integration points should have pact test written and verified (if consumer), if provider all pacts in broker should be verified before publishing latest release</li>
                  <li>No pact tests should be ignored in the build</li>
                  <li>Coverage criteria for integration is &gt;90% (i.e, all your external integration points should be covered with pact tests)</li>
                  <li>Implemented can-i-deploy pact feature before releasing any latest versions.</li>
               </ol>
            </td>
            <td colspan="1" class="confluenceTd">
               <p>Developer to write PACT tests. QA to review coverage</p>
            </td>
            <td colspan="1" class="confluenceTd"><br></td>
         </tr>
         <tr>
            <td colspan="1" class="confluenceTd">
               <p><span style="color: rgb(0,0,255);"><strong>Functional (Service)</strong></span></p>
               <p>(Covers interaction of service functionality using Serenity)</p>
            </td>
            <td colspan="1" class="confluenceTd">
               <ol>
                  <li>Functional Test for each API controller</li>
                  <li>Coverage criteria is &gt; 80% of functional points</li>
                  <li>Ensure no duplication of earlier tests</li>
                  <li>Functional test report should be published into Jenkins</li>
                  <li>JIRA tasks created for Service Tests</li>
               </ol>
            </td>
            <td colspan="1" class="confluenceTd">
               <ol>
                  <li>Developer to write new automated API tests</li>
                  <li>Developer or QA to update existing automated API tests.</li>
                  <li>QA to review coverage</li>
               </ol>
            </td>
            <td colspan="1" class="confluenceTd"><br></td>
         </tr>
         <tr>
            <td colspan="1" class="confluenceTd"><span style="color: rgb(0,0,255);"><strong>Smoke</strong></span></td>
            <td colspan="1" class="confluenceTd">Confirmation of a response (using a GET request only). Should <strong>not</strong> be a health check.</td>
            <td colspan="1" class="confluenceTd">Developer or QA to write automated Smoke tests</td>
            <td colspan="1" class="confluenceTd"><br></td>
         </tr>
         <tr>
            <td colspan="1" class="confluenceTd">
               <p><span style="color: rgb(0,0,255);"><strong>UI Functional</strong></span></p>
               <p>(Covers Interaction of UI e2e)</p>
            </td>
            <td colspan="1" class="confluenceTd">
               <ol>
                  <li>Only happy path/critical path covered</li>
                  <li>All tests (happy/critical path) automated (CodeceptJS, Protractor or similar)</li>
                  <li>Ensure no duplication of earlier tests</li>
                  <li>Functional test report should be published into Jenkins</li>
               </ol>
            </td>
            <td colspan="1" class="confluenceTd">
               <p>QA write automated UI tests</p>
            </td>
            <td colspan="1" class="confluenceTd"><br></td>
         </tr>
         <tr>
            <td colspan="1" class="confluenceTd">
               <p><span style="color: rgb(0,0,255);"><strong><span>Manual &amp; Exploratory </span></strong></span></p>
               <p><span style="color: rgb(11,1,23);">(Any tests that can not be automated e.g. Time driven, Usability, Physical)</span></p>
            </td>
            <td colspan="1" class="confluenceTd">
               <div class="content-wrapper">
                  <ol>
                     <li>Tests reviewed and documented (in Zephyr or similar)</li>
                     <li>Ensure no duplication of earlier tests</li>
                  </ol>
               </div>
            </td>
            <td colspan="1" class="confluenceTd">
               <p>QA document manual tests</p>
            </td>
            <td colspan="1" class="confluenceTd"><br></td>
         </tr>
         <tr>
            <td class="highlight-green confluenceTd" style="text-align: center;" colspan="4" data-highlight-colour="green"><strong>Other Quality Dimensions</strong></td>
         </tr>
         <tr>
            <td class="confluenceTd">
               <p><span style="color: rgb(0,0,255);"><strong>Performance</strong></span></p>
               <p><span style="color: rgb(0,0,37);">(</span>Performance assessment for Releases (Minor / Major &amp; Private / Public</p>
               <p style="margin-left: 0.0px;text-align: left;">Overnight Performance Pipeline - Minor &amp; Private Betas (early view)</p>
               <p style="margin-left: 0.0px;text-align: left;">Formal Performance - Major &amp; Public Beta release)</p>
            </td>
            <td class="confluenceTd">
               <div class="content-wrapper">
                  <ol>
                     <li>
                        <p style="margin-left: 0.0px;text-align: left;">Response time are measured by 95th percentiles</p>
                        <ul style="text-decoration: none;text-align: left;margin-left: 0.0px;">
                           <li>UI - 1.5 seconds</li>
                           <li>API - 0.5 seconds</li>
                        </ul>
                     </li>
                     <li>Volume (Throughput) - defined by each project<br><br></li>
                     <li>
                        <p style="margin-left: 0.0px;text-align: left;">User Concurrency - defined by each project</p>
                        <ol>
                           <li>
                              <p style="margin-left: 0.0px;text-align: left;">Pipeline - 10 users minimum</p>
                           </li>
                        </ol>
                     </li>
                     <li>
                        <p style="margin-left: 0.0px;text-align: left;">Server utlisation</p>
                        <ul style="text-decoration: none;text-align: left;margin-left: 0.0px;">
                           <li>ASE - I2 | 2 - <span>60% CPU &amp; RAM</span></li>
                           <li>Containers - 60% CPU &amp; RAM</li>
                           <li>Cluster - <span>60% CPU &amp; RAM (total - all Containers)</span></li>
                        </ul>
                     </li>
                  </ol>
               </div>
            </td>
            <td colspan="1" class="confluenceTd">Teams should include performance testing during story development in path to live (including Preview)</td>
            <td colspan="1" class="confluenceTd"><br></td>
         </tr>
         <tr>
            <td colspan="1" class="confluenceTd"><span style="color: rgb(0,0,255);"><strong><a href="/confluence/display/RQA/Security+Testing+Checklist+for+Reform+-Work+In+Progress"><span style="color: rgb(0,0,255);">Security testing</span></a></strong></span></td>
            <td colspan="1" class="confluenceTd">
               <ol>
                  <li>Yarn audit and Helmet running?</li>
                  <li>Zap Overnights implemented?</li>
               </ol>
            </td>
            <td colspan="1" class="confluenceTd">Configuration by team</td>
            <td colspan="1" class="confluenceTd"><br></td>
         </tr>
         <tr>
            <td colspan="1" class="confluenceTd"><span style="color: rgb(0,0,255);"><strong><a href="/confluence/display/RD/ITHC"><span style="color: rgb(0,0,255);">External Pen test</span></a></strong></span></td>
            <td colspan="1" class="confluenceTd">
               <ol>
                  <li>ITHC completed / scheduled where applicable</li>
                  <li>Outstanding issues?</li>
                  <li>Test Report Stats?</li>
               </ol>
            </td>
            <td colspan="1" class="confluenceTd">TBC</td>
            <td colspan="1" class="confluenceTd"><br></td>
         </tr>
         <tr>
            <td class="confluenceTd">
               <p><span style="color: rgb(0,0,255);"><strong>Accessibility</strong></span></p>
            </td>
            <td class="confluenceTd">
               <ol>
                  <li><span style="color: rgb(0,0,0);">Pa11y - all pages spidered - no outstanding AA or A compliancy failures.</span></li>
                  <li><span style="color: rgb(0,0,0);">Compliant with WCAG 2.1 (update includes devices)</span></li>
                  <li><span style="color: rgb(0,0,0);">Manual device testing - windows NVDA / JAWS. Mac VoiceOver, Keyboard, iOS/ Android mobile and tablet </span></li>
                  <li><span style="color: rgb(0,0,0);">DAC audit completed / Scheduled where applicable - especially after major code changes</span></li>
                  <li><span style="color: rgb(0,0,0);">Outstanding issues?</span></li>
                  <li><span style="color: rgb(0,0,0);">Test Report Stats?</span></li>
                  <li><span style="color: rgb(0,0,0);">Accessibility statement up-to-date </span></li>
               </ol>
            </td>
            <td colspan="1" class="confluenceTd">Team to configure</td>
            <td colspan="1" class="confluenceTd">Read resources here: <a href="/confluence/display/RQA/Accessibility">Accessibility</a></td>
         </tr>
         <tr>
            <td class="confluenceTd"><span style="color: rgb(0,0,255);"><strong>X-browser</strong></span></td>
            <td class="confluenceTd">
               <p>Compliant with latest GDS standards</p>
            </td>
            <td colspan="1" class="confluenceTd">Team to configure SauceLabs</td>
            <td colspan="1" class="confluenceTd"><br></td>
         </tr>
         <tr>
            <td class="highlight-grey confluenceTd" style="text-align: center;" colspan="4" data-highlight-colour="grey"><strong>Reporting</strong></td>
         </tr>
         <tr>
            <td class="confluenceTd"><strong>Reporting</strong></td>
            <td class="confluenceTd">
               <ol>
                  <li>Jenkins hosted reports (all relevant jobs)</li>
                  <li>Monitoring Tools - Appinsights dashboard</li>
                  <li>Defect tracking</li>
                  <li>Requirements traceability</li>
                  <li>Jenkins dashboard to be green</li>
               </ol>
            </td>
            <td colspan="1" class="confluenceTd">Team to configure</td>
            <td colspan="1" class="confluenceTd"><br></td>
         </tr>
      </tbody>
   </table>
</div>
