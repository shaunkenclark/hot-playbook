---
title: Exploratory Testing
weight: 3
---

# <%= current_page.data.title %>

<div id="main-content" class="wiki-content">
                           
        <p>Exploratory testing is a manual process, where we analyse the application by utilising the ideological approach and imagination power.</p><p>Moreover, Exploratory testing does not have any specific method to follow. Also, there will be no scripted test cases that we follow. It's Ad-hoc. We have to validate the application on the fly.</p><h3 id="ExploratoryTestingBestPractices-AddExploratorytestingtoyourexistingtestStrategy"><span class="handy-header aui-icon aui-icon-small aui-iconfont-link" title="Copy link"></span>Add Exploratory testing to your existing test Strategy</h3><p>Exploratory testing is random or unstructured in nature and can reveal bugs that would go undiscovered during structured phase of testing. Some benefits include</p><ol><li>The application becomes more reliable and trustworthy.</li><li>Real time performance of the application.</li><li>Fills the gaps that automation has left.</li><li>No scripted tests cases.</li><li>More you explore your application, more robust and interactive your application will become.</li></ol><h3 id="ExploratoryTestingBestPractices-Structureyourexploratorytesting"><span class="handy-header aui-icon aui-icon-small aui-iconfont-link" title="Copy link"></span>Structure your exploratory testing</h3><p>Even though the testing method does not have any set approach, it should be carried by following a structure. Also, exploratory testing does not mean starting from anywhere and go anywhere.</p><p>if you blindly perform exploratory testing you lose the proper orientation.</p><p>Hence to perform result-oriented exploratory testing, always follow the structure of exploratory testing so that you could make justification with the task.</p><h3 id="ExploratoryTestingBestPractices-Useadestructivemindset"><span class="handy-header aui-icon aui-icon-small aui-iconfont-link" title="Copy link"></span>Use a destructive mindset</h3><p>Watch out for bugs, design issues, slow response times, missing or misleading error messages and everything else that would annoy you as a user of your software.</p><h3 id="ExploratoryTestingBestPractices-Documenteverythingyoufindforlater"><span class="handy-header aui-icon aui-icon-small aui-iconfont-link" title="Copy link"></span>Document everything you find for later</h3><p>Exploratory testing helps formalise the findings and document it.</p><p>With the help of visual feedback and collaborative testing tools, everyone can participate in exploratory testing. &nbsp;This enables teams to react and adapt to changes quickly â€“ facilitating an agile workflow.</p><h3 id="ExploratoryTestingBestPractices-TryandautomatethebugsyoufoundthroughExploratoryTesting"><span class="handy-header aui-icon aui-icon-small aui-iconfont-link" title="Copy link"></span>Try and automate the bugs you found through Exploratory Testing</h3><p>This way there won't be any regressions in the future for the same bugs if they occur.</p><h3 id="ExploratoryTestingBestPractices-Exploratorytestingisnotagoodideaforregulatedorcompliancebasedapplications"><span class="handy-header aui-icon aui-icon-small aui-iconfont-link" title="Copy link"></span>Exploratory testing is not a good idea for regulated or compliance based applications</h3><p>Especially with any type of testing that is regulated or compliance-based, scripted testing is the way to go.</p><p>In compliance based testing, where certain checklists and mandates need to be followed for legal reasons, it is advised to stick to scripted testing.</p><p>One example of this is accessibility testing where several laws govern the testing protocol and there are defined standards that need to be passed.</p>

                
        
    
        </div>
